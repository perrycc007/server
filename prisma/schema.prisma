generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum CheckStatus {
  NOT_YET_CHECKED
  CHECKING
  CHECKED
}

enum MatchStatus {
  REJECTED
  ASK_AGAIN
  NO_LONGER_MATCH
  OPEN
}

enum NumberGrade {
  Value_2
  Value_3
  Value_4
  Value_5
  Value_5Star
  Value_5DoubleStar
}

// Define an enum for the letter-based grades
enum LetterGrade {
  APlus
  A
  B
  C
  D
  E
  F
}

model profile {
  idprofile             Int       @id @default(autoincrement())
  userid                Int       @unique
  availtime             String?   @db.VarChar(600)
  address               String?   @db.VarChar(45)
  agreewith             String?   @db.VarChar(45)
  country               String?   @db.VarChar(45)
  emergencycontact      String?   @db.VarChar(45)
  emergencyphone        String?   @db.VarChar(45)
  emergencyrelationship String?   @db.VarChar(45)
  findus                String?   @db.VarChar(45)
  language              String?   @db.VarChar(45)
  name                  String?   @db.VarChar(45)
  nationality           String?   @db.VarChar(45)
  phoneno               String?   @db.VarChar(45)
  lastOnline            DateTime? @db.DateTime(0)
  user                  user      @relation(fields: [userid], references: [userid])
}

model user {
  userid           Int         @id @default(autoincrement())
  email            String      @unique @db.VarChar(45)
  password         String      @db.TinyText
  favouritecaseid  Json?
  favouritetutorid Json?
  profile          profile?
  tutor            tutor?
  students         student[]
  favourites       favourite[] // Add this line
  location         location[]
  subject          subject[]
}

model favourite {
  idfavourite Int     @id @default(autoincrement())
  userid      Int
  studentid   Int // Student ID
  tutorid     Int // Tutor ID
  user        user    @relation(fields: [userid], references: [userid])
  student     student @relation(fields: [studentid], references: [studentid])
  tutor       tutor   @relation(fields: [tutorid], references: [tutorid])
}

model student {
  studentid         Int         @id @default(autoincrement())
  userid            Int
  lowestfrequency   Int?
  lowestfee         Int?
  lowestduration    Int?
  language          String?     @db.VarChar(45)
  others            String?     @db.VarChar(45)
  expectation       String?     @db.VarChar(45)
  genderrequirement String?     @db.VarChar(45)
  status            String?     @db.VarChar(45)
  highestfee        Int?
  highestfrequency  Int?
  highestduration   Int?
  level             String?     @db.VarChar(45)
  lastOnline        DateTime?   @db.DateTime(0)
  matches           match[] // Back-relation for matches
  user              user        @relation(fields: [userid], references: [userid])
  favourites        favourite[] // Add this line
  location          location[]
  subject           subject[]
  availtime         availtime[]
}


model tutor {
  tutorid              Int         @id @default(autoincrement())
  userid               Int?        @unique
  intro                String?     @db.VarChar(45)
  language             String?     @db.VarChar(45)
  occupation           String?     @db.VarChar(45)
  secondaryschool      String?     @db.VarChar(45)
  primaryschool        String?     @db.VarChar(45)
  yearofexperience     String?     @db.VarChar(45)
  experience           String?     @db.VarChar(45)
  highestteachinglevel String?     @db.VarChar(45)
  educationallevel     String?     @db.VarChar(45)
  notes                String?     @db.VarChar(45)
  schoolcat            String?     @db.VarChar(45)
  year                 String?     @db.VarChar(45)
  publicexamgrade      String?     @db.VarChar(45)
  university           String?     @db.VarChar(45)
  othercert            String?     @db.VarChar(45)
  caseid               String?     @db.VarChar(45)
  major                String?     @db.VarChar(45)
  subgrade             Json?
  strength             String?     @db.VarChar(45)
  highestfee           Int?
  lowestfee            Int?
  matchedbefore        Json?
  status               String?     @default("open") @db.VarChar(45)
  lastOnline           DateTime?   @db.DateTime(0)
  verify               String?     @default("未驗證") @db.VarChar(45)
  user                 user?       @relation(fields: [userid], references: [userid])
  matches              match[] // Back-relation for matches
  favourites           favourite[] // Add this line
  location             location[]
  subject              subject[]
  HKCEE                HKCEE[]
  HKALE                HKALE[]
  HKDSE                HKDSE[]
  IB                   IB[]
  IGCSE                IGCSE[]
  GCEALevel            GCEALevel[]
  availtime         availtime[]
}

model match {
  idmatch      Int         @id @default(autoincrement())
  studentid    Int // Student ID
  tutorid      Int // Tutor ID
  availability Boolean // Indicates availability for the match
  checkStatus  CheckStatus // Status of the check
  student      student     @relation(fields: [studentid], references: [studentid])
  tutor        tutor       @relation(fields: [tutorid], references: [tutorid])
  matchstatus  MatchStatus
}

model location {
  id              Int      @id @default(autoincrement())
  userid          Int?
  studentid       Int?
  tutorid         Int?
  Midlevels       Boolean  @default(false)
  Pokfulam        Boolean  @default(false)
  Central         Boolean  @default(false)
  Western         Boolean  @default(false)
  WanChai         Boolean  @default(false)
  CausewayBay     Boolean  @default(false)
  HappyValley     Boolean  @default(false)
  NorthPoint      Boolean  @default(false)
  QuarryBay       Boolean  @default(false)
  TaiKoo          Boolean  @default(false)
  ShauKeiWan      Boolean  @default(false)
  SaiWanHo        Boolean  @default(false)
  ChaiWan         Boolean  @default(false)
  SiuSaiWan       Boolean  @default(false)
  Aberdeen        Boolean  @default(false)
  ApLeiChau       Boolean  @default(false)
  Stanley         Boolean  @default(false)
  MeiFoo          Boolean  @default(false)
  LaiChiKok       Boolean  @default(false)
  CheungShaWan    Boolean  @default(false)
  ShamShuiPo      Boolean  @default(false)
  TaiKokTsui      Boolean  @default(false)
  MongKok         Boolean  @default(false)
  HoManTin        Boolean  @default(false)
  YauMaTei        Boolean  @default(false)
  TsimShaTsui     Boolean  @default(false)
  ToKwaWan        Boolean  @default(false)
  HungHom         Boolean  @default(false)
  Whampoa         Boolean  @default(false)
  LokFu           Boolean  @default(false)
  TseungKwanO     Boolean  @default(false)
  LamTin          Boolean  @default(false)
  NgauTauKok      Boolean  @default(false)
  KowloonCity     Boolean  @default(false)
  SheungShui      Boolean  @default(false)
  FanLing         Boolean  @default(false)
  TaiPo           Boolean  @default(false)
  MaOnShan        Boolean  @default(false)
  TseungKwanOArea Boolean  @default(false)
  TuenMun         Boolean  @default(false)
  YuenLong        Boolean  @default(false)
  TuenMunRoad     Boolean  @default(false)
  ShamTseng       Boolean  @default(false)
  TsingYi         Boolean  @default(false)
  KwaiFong        Boolean  @default(false)
  KwaiChung       Boolean  @default(false)
  LaiKing         Boolean  @default(false)
  TsingYiIsland   Boolean  @default(false)
  MaWan           Boolean  @default(false)
  TungChung       Boolean  @default(false)
  OutlyingIslands Boolean  @default(false)
  user            user?    @relation(fields: [userid], references: [userid])
  tutor           tutor?   @relation(fields: [tutorid], references: [tutorid])
  student         student? @relation(fields: [studentid], references: [studentid])
}

model subject {
  id                       Int      @id @default(autoincrement())
  userid                   Int?
  studentid                Int?
  tutorid                  Int?
  GeneralStudies           Boolean  @default(false)
  Arts                     Boolean  @default(false)
  Science                  Boolean  @default(false)
  Business                 Boolean  @default(false)
  Chinese                  Boolean  @default(false)
  English                  Boolean  @default(false)
  Mathematics              Boolean  @default(false)
  MathematicsM1            Boolean  @default(false)
  MathematicsM2            Boolean  @default(false)
  ChineseLiterature        Boolean  @default(false)
  EnglishLiterature        Boolean  @default(false)
  ChineseHistory           Boolean  @default(false)
  WorldHistory             Boolean  @default(false)
  Geography                Boolean  @default(false)
  LiberalStudies           Boolean  @default(false)
  IntegratedScience        Boolean  @default(false)
  IntegratedHumanities     Boolean  @default(false)
  AdditionalMathematics    Boolean  @default(false)
  PureMathematics          Boolean  @default(false)
  AppliedMathematics       Boolean  @default(false)
  Physics                  Boolean  @default(false)
  Biology                  Boolean  @default(false)
  Chemistry                Boolean  @default(false)
  BusinessStudies          Boolean  @default(false)
  Accounting               Boolean  @default(false)
  Economics                Boolean  @default(false)
  BusinessandPublicAffairs Boolean  @default(false)
  MathematicsandStatistics Boolean  @default(false)
  BAFS                     Boolean  @default(false)
  Putonghua                Boolean  @default(false)
  Cantonese                Boolean  @default(false)
  EnglishPhonics           Boolean  @default(false)
  Japanese                 Boolean  @default(false)
  Korean                   Boolean  @default(false)
  French                   Boolean  @default(false)
  Italian                  Boolean  @default(false)
  German                   Boolean  @default(false)
  Spanish                  Boolean  @default(false)
  EnglishConversation      Boolean  @default(false)
  GCE                      Boolean  @default(false)
  TOEFL                    Boolean  @default(false)
  IELTS                    Boolean  @default(false)
  Cello                    Boolean  @default(false)
  Viola                    Boolean  @default(false)
  Violin                   Boolean  @default(false)
  Trumpet                  Boolean  @default(false)
  Harmonica                Boolean  @default(false)
  Recorder                 Boolean  @default(false)
  Flute                    Boolean  @default(false)
  Ocarina                  Boolean  @default(false)
  Clarinet                 Boolean  @default(false)
  Saxophone                Boolean  @default(false)
  Erhu                     Boolean  @default(false)
  Guzheng                  Boolean  @default(false)
  Pipa                     Boolean  @default(false)
  Yangqin                  Boolean  @default(false)
  Liuqin                   Boolean  @default(false)
  Guitar                   Boolean  @default(false)
  AcousticGuitar           Boolean  @default(false)
  ElectricGuitar           Boolean  @default(false)
  ElectronicKeyboard       Boolean  @default(false)
  Piano                    Boolean  @default(false)
  Vocal                    Boolean  @default(false)
  MusicTheory              Boolean  @default(false)
  SwimmingFreestyle        Boolean  @default(false)
  SwimmingBackstroke       Boolean  @default(false)
  SwimmingBreaststroke     Boolean  @default(false)
  SwimmingButterfly        Boolean  @default(false)
  Painting                 Boolean  @default(false)
  Computer                 Boolean  @default(false)
  CambridgeEnglish         Boolean  @default(false)
  OlympiadMath             Boolean  @default(false)
  Abacus                   Boolean  @default(false)
  KumanMath                Boolean  @default(false)
  IGCSE                    Boolean  @default(false)
  IBOthers                 Boolean  @default(false)
  user                     user?    @relation(fields: [userid], references: [userid])
  tutor                    tutor?   @relation(fields: [tutorid], references: [tutorid])
  student                  student? @relation(fields: [studentid], references: [studentid])
}

model HKCEE {
  id                    Int          @id @default(autoincrement())
  tutorid               Int
  HKCEE_ChineseLanguage       LetterGrade?
  HKCEE_EnglishLanguage       LetterGrade?
  HKCEE_Mathematics           LetterGrade?
  HKCEE_ChineseLiterature     LetterGrade?
  HKCEE_EnglishLiterature     LetterGrade?
  HKCEE_ChineseHistory        LetterGrade?
  HKCEE_WorldHistory          LetterGrade?
  HKCEE_Geography             LetterGrade?
  HKCEE_Music                 LetterGrade?
  HKCEE_AdditionalMathematics LetterGrade?
  HKCEE_Physics               LetterGrade?
  HKCEE_Biology               LetterGrade?
  HKCEE_Chemistry             LetterGrade?
  HKCEE_BusinessStudies       LetterGrade?
  HKCEE_PrinciplesofAccounts  LetterGrade?
  HKCEE_Economics             LetterGrade?
  HKCEE_ComputerStudies       LetterGrade?
  tutor                 tutor?       @relation(fields: [tutorid], references: [tutorid])
}

model HKALE {
  id                    Int          @id @default(autoincrement())
  tutorid               Int
  HKALE_ChineseLanguage       LetterGrade?
  HKALE_EnglishLanguage       LetterGrade?
  HKALE_Mathematics           LetterGrade?
  HKALE_ChineseLiterature     LetterGrade?
  HKALE_EnglishLiterature     LetterGrade?
  HKALE_ChineseHistory        LetterGrade?
  HKALE_WorldHistory          LetterGrade?
  HKALE_Geography             LetterGrade?
  HKALE_Music                 LetterGrade?
  HKALE_AdditionalMathematics LetterGrade?
  HKALE_Physics               LetterGrade?
  HKALE_Biology               LetterGrade?
  HKALE_Chemistry             LetterGrade?
  HKALE_BusinessStudies       LetterGrade?
  HKALE_PrinciplesofAccounts  LetterGrade?
  HKALE_Economics             LetterGrade?
  HKALE_ComputerStudies       LetterGrade?
  tutor                 tutor        @relation(fields: [tutorid], references: [tutorid])
}

model HKDSE {
  id                                    Int          @id @default(autoincrement())
  tutorid                               Int
  HKDSE_ChineseLanguage                       NumberGrade?
  HKDSE_EnglishLanguage                       NumberGrade?
  HKDSE_Mathematics                           NumberGrade?
  HKDSE_LiberalStudies                        NumberGrade?
  HKDSE_ChineseLiterature                     NumberGrade?
  HKDSE_EnglishLiterature                     NumberGrade?
  HKDSE_MathematicsM1                         NumberGrade?
  HKDSE_MathematicsM2                         NumberGrade?
  HKDSE_ChineseHistory                        NumberGrade?
  HKDSE_Economics                             NumberGrade?
  HKDSE_EthicsandReligiousStudies             NumberGrade?
  HKDSE_Geography                             NumberGrade?
  HKDSE_History                               NumberGrade?
  HKDSE_TourismandHospitalityStudies          NumberGrade?
  HKDSE_Biology                               NumberGrade?
  HKDSE_Chemistry                             NumberGrade?
  HKDSE_Physics                               NumberGrade?
  HKDSE_IntegratedScienceCombinedScience      NumberGrade?
  HKDSE_IntegratedScienceIntegratedScience    NumberGrade?
  HKDSE_InformationandCommunicationTechnology NumberGrade?
  HKDSE_TechnologyandLiving                   NumberGrade?
  HKDSE_DesignandAppliedTechnology            NumberGrade?
  HKDSE_VisualArts                            NumberGrade?
  HKDSE_Music                                 NumberGrade?
  HKDSE_PhysicalEducation                     NumberGrade?
  HKDSE_BusinessAccountingandFinancialStudies NumberGrade?
  HKDSE_HealthManagementandSocialCare         NumberGrade?
  HKDSE_OtherLanguagesFrench                  NumberGrade?
  HKDSE_OtherLanguagesJapanese                NumberGrade?
  HKDSE_OtherLanguagesGerman                  NumberGrade?
  HKDSE_OtherLanguagesSpanish                 NumberGrade?
  HKDSE_OtherLanguagesHindi                   NumberGrade?
  HKDSE_OtherLanguagesUrdu                    NumberGrade?
  tutor                                 tutor        @relation(fields: [tutorid], references: [tutorid])
}

model IB {
  id                                                       Int          @id @default(autoincrement())
  tutorid                                                  Int
  IB_LanguagesEnglishLanguageLiteratureSLHL                   LetterGrade?
  IB_LanguagesEnglishLiteratureSLHL                           LetterGrade?
  IB_LanguagesChineseALanguageLiteratureSL                    LetterGrade?
  IB_LanguagesChineseALiteratureSL                            LetterGrade?
  IB_LanguagesChineseBSLHL                                    LetterGrade?
  IB_MathematicsMathematics                                   LetterGrade?
  IB_MathematicsMathematicsSL                                 LetterGrade?
  IB_MathematicsMathematicsHL                                 LetterGrade?
  IB_MathematicsFurtherMathematicsHL                          LetterGrade?
  IB_HumanitiesandSocialSciencesBusinessManagement            LetterGrade?
  IB_HumanitiesandSocialSciencesEconomics                     LetterGrade?
  IB_HumanitiesandSocialSciencesGlobalPolitics                LetterGrade?
  IB_HumanitiesandSocialSciencesHistory                       LetterGrade?
  IB_HumanitiesandSocialSciencesPhilosophy                    LetterGrade?
  IB_HumanitiesandSocialSciencesPsychology                    LetterGrade?
  IB_HumanitiesandSocialSciencesSocialandCulturalAnthropology LetterGrade?
  IB_HumanitiesandSocialSciencesWorldReligionsSL              LetterGrade?
  IB_SciencesBiology                                          LetterGrade?
  IB_SciencesChemistry                                        LetterGrade?
  IB_SciencesPhysics                                          LetterGrade?
  IB_SciencesSportsExerciseandHealthScience                   LetterGrade?
  IB_SciencesCreativeTechnicalandVocational                   LetterGrade?
  IB_SciencesInformationTechnology                            LetterGrade?
  IB_SciencesComputerScience                                  LetterGrade?
  IB_SciencesDesignTechnology                                 LetterGrade?
  tutor                                                    tutor        @relation(fields: [tutorid], references: [tutorid])
}

model IGCSE {
  id                                                Int          @id @default(autoincrement())
  tutorid                                           Int
  IGCSE_LanguagesChinese                                  LetterGrade?
  IGCSE_LanguagesEnglishA                                 LetterGrade?
  IGCSE_LanguagesEnglishB                                 LetterGrade?
  IGCSE_LanguagesEnglishLiterature                        LetterGrade?
  IGCSE_SciencesBiology                                   LetterGrade?
  IGCSE_SciencesChemistry                                 LetterGrade?
  IGCSE_SciencesPhysics                                   LetterGrade?
  IGCSE_SciencesScience                                   LetterGrade?
  IGCSE_SciencesGeography                                 LetterGrade?
  IGCSE_CreativeTechnicalandVocationalComputerScience     LetterGrade?
  IGCSE_CreativeTechnicalandVocationalDesignandTechnology LetterGrade?
  IGCSE_MathematicsMathematicsA                           LetterGrade?
  IGCSE_MathematicsMathematicsB                           LetterGrade?
  IGCSE_MathematicsFurtherPureMathematics                 LetterGrade?
  IGCSE_HumanitiesandSocialSciencesBusiness               LetterGrade?
  IGCSE_HumanitiesandSocialSciencesEconomics              LetterGrade?
  IGCSE_HumanitiesandSocialSciencesHistory                LetterGrade?
  IGCSE_HumanitiesandSocialSciencesAccounting             LetterGrade?
  tutor                                             tutor        @relation(fields: [tutorid], references: [tutorid])
}

model GCEALevel {
  id                                         Int          @id @default(autoincrement())
  tutorid                                    Int
  GCEALevel_LanguagesEnglishLanguage                   LetterGrade?
  GCEALevel_LanguagesEnglishLiterature                 LetterGrade?
  GCEALevel_SciencesBiology                            LetterGrade?
  GCEALevel_SciencesChemistry                          LetterGrade?
  GCEALevel_SciencesPhysics                            LetterGrade?
  GCEALevel_MathematicsMathematics                     LetterGrade?
  GCEALevel_MathematicsFurtherMathematics              LetterGrade?
  GCEALevel_MathematicsPureMathematics                 LetterGrade?
  GCEALevel_HumanitiesandSocialSciencesAccounting      LetterGrade?
  GCEALevel_HumanitiesandSocialSciencesBusinessStudies LetterGrade?
  GCEALevel_HumanitiesandSocialSciencesEconomics       LetterGrade?
  GCEALevel_HumanitiesandSocialSciencesPsychology      LetterGrade?
  tutor                                      tutor        @relation(fields: [tutorid], references: [tutorid])
}



model availtime {
  id Int @id @default(autoincrement())
  studentid       Int?
  tutorid         Int?
  Mon0800 Boolean @default(false)
  Mon0900 Boolean @default(false)
  Mon1000 Boolean @default(false)
  Mon1100 Boolean @default(false)
  Mon1200 Boolean @default(false)
  Mon1300 Boolean @default(false)
  Mon1400 Boolean @default(false)
  Mon1500 Boolean @default(false)
  Mon1600 Boolean @default(false)
  Mon1700 Boolean @default(false)
  Mon1800 Boolean @default(false)
  Mon1900 Boolean @default(false)
  Mon2000 Boolean @default(false)
  Mon2100 Boolean @default(false)
  Mon2200 Boolean @default(false)

  Tue0800 Boolean @default(false)
  Tue0900 Boolean @default(false)
  Tue1000 Boolean @default(false)
  Tue1100 Boolean @default(false)
  Tue1200 Boolean @default(false)
  Tue1300 Boolean @default(false)
  Tue1400 Boolean @default(false)
  Tue1500 Boolean @default(false)
  Tue1600 Boolean @default(false)
  Tue1700 Boolean @default(false)
  Tue1800 Boolean @default(false)
  Tue1900 Boolean @default(false)
  Tue2000 Boolean @default(false)
  Tue2100 Boolean @default(false)
  Tue2200 Boolean @default(false)

  Wed0800 Boolean @default(false)
  Wed0900 Boolean @default(false)
  Wed1000 Boolean @default(false)
  Wed1100 Boolean @default(false)
  Wed1200 Boolean @default(false)
  Wed1300 Boolean @default(false)
  Wed1400 Boolean @default(false)
  Wed1500 Boolean @default(false)
  Wed1600 Boolean @default(false)
  Wed1700 Boolean @default(false)
  Wed1800 Boolean @default(false)
  Wed1900 Boolean @default(false)
  Wed2000 Boolean @default(false)
  Wed2100 Boolean @default(false)
  Wed2200 Boolean @default(false)

  Thur0800 Boolean @default(false)
  Thur0900 Boolean @default(false)
  Thur1000 Boolean @default(false)
  Thur1100 Boolean @default(false)
  Thur1200 Boolean @default(false)
  Thur1300 Boolean @default(false)
  Thur1400 Boolean @default(false)
  Thur1500 Boolean @default(false)
  Thur1600 Boolean @default(false)
  Thur1700 Boolean @default(false)
  Thur1800 Boolean @default(false)
  Thur1900 Boolean @default(false)
  Thur2000 Boolean @default(false)
  Thur2100 Boolean @default(false)
  Thur2200 Boolean @default(false)

  Fri0800 Boolean @default(false)
  Fri0900 Boolean @default(false)
  Fri1000 Boolean @default(false)
  Fri1100 Boolean @default(false)
  Fri1200 Boolean @default(false)
  Fri1300 Boolean @default(false)
  Fri1400 Boolean @default(false)
  Fri1500 Boolean @default(false)
  Fri1600 Boolean @default(false)
  Fri1700 Boolean @default(false)
  Fri1800 Boolean @default(false)
  Fri1900 Boolean @default(false)
  Fri2000 Boolean @default(false)
  Fri2100 Boolean @default(false)
  Fri2200 Boolean @default(false)

  Sat0800 Boolean @default(false)
  Sat0900 Boolean @default(false)
  Sat1000 Boolean @default(false)
  Sat1100 Boolean @default(false)
  Sat1200 Boolean @default(false)
  Sat1300 Boolean @default(false)
  Sat1400 Boolean @default(false)
  Sat1500 Boolean @default(false)
  Sat1600 Boolean @default(false)
  Sat1700 Boolean @default(false)
  Sat1800 Boolean @default(false)
  Sat1900 Boolean @default(false)
  Sat2000 Boolean @default(false)
  Sat2100 Boolean @default(false)
  Sat2200 Boolean @default(false)

  Sun0800 Boolean @default(false)
  Sun0900 Boolean @default(false)
  Sun1000 Boolean @default(false)
  Sun1100 Boolean @default(false)
  Sun1200 Boolean @default(false)
  Sun1300 Boolean @default(false)
  Sun1400 Boolean @default(false)
  Sun1500 Boolean @default(false)
  Sun1600 Boolean @default(false)
  Sun1700 Boolean @default(false)
  Sun1800 Boolean @default(false)
  Sun1900 Boolean @default(false)
  Sun2000 Boolean @default(false)
  Sun2100 Boolean @default(false)
  Sun2200 Boolean @default(false)
  tutor           tutor?   @relation(fields: [tutorid], references: [tutorid])
  student         student? @relation(fields: [studentid], references: [studentid])
}

