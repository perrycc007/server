import { Injectable } from '@nestjs/common';
import { PrismaService } from '../prisma/prisma.service'; // Assuming you have a PrismaService
import { DataService } from '../helper/helperFunction.service';
@Injectable()
export class StudentsService {
  constructor(
    private readonly prismaService: PrismaService,
    private readonly DataService: DataService,
  ) {}

  async findManyWithStatusOpen(): Promise<any> {
    const result = this.prismaService.student.findMany({
      where: { status: 'open' },
      orderBy: { lastOnline: 'desc' },
      include: {
        location: true,
        availtime: true,
        subject: true,
      },
    });
    result.then((data) => {
      const object = this.DataService.formatObject(data);
      console.log(object);
      return object;
    });
  }
  async findOne(casesid: string) {
    // Implement logic to fetch a student by ID using Prisma
    const result = await this.prismaService.student.findUnique({
      where: {
        studentid: JSON.parse(casesid),
      },
      include: {
        location: true,
        availtime: true,
        subject: true,
      },
    });
    const object = this.DataService.formatObject([result]);
    console.log(object);
    return object;
  }
  async findTutorsByPreference(
    preference: any,
    location: string[],
    subject: string[],
  ): Promise<any> {
    const students = await this.prismaService.student.findMany({
      where: preference,
    });

    // let found =
    //   location[0] != null
    //     ? students.map((key) => {
    //         if (
    //           JSON.parse(key.location as string).some(
    //             (item) => location.indexOf(item) >= 0,
    //           )
    //         ) {
    //           return key;
    //         }
    //       })

    //     : students;
    // console.log(found);
    // found = found.filter((item) => item != null);
    // let found1 =
    //   subject[0] != null
    //     ? found.map((key) => {
    //         if (
    //           JSON.parse(key.subject as string).some(
    //             (item) => subject.indexOf(item) >= 0,
    //           )
    //         ) {
    //           return key;
    //         }
    //       })
    //     : found;
    // // const result = JSON.parse(...s);
    // // console.log(found1)
    // found1 = found1.filter((item) => item != null);

    // return found;
  }

  async findUniqueUserFavouriteCases(userId: number): Promise<any> {
    const favourite = await this.prismaService.user.findUnique({
      where: { userid: userId },
    });
    const caseIdList = favourite ? (favourite.favouritecaseid as number[]) : [];
    const result = await this.prismaService.student.findMany({
      where: { studentid: { in: caseIdList } },
      orderBy: { lastOnline: 'desc' },
      include: {
        location: true,
        availtime: true,
        subject: true,
      },
    });

    const object = this.DataService.formatObject(result);
    console.log(object);
    return object;
  }
  async updateStudent(studentId: number, information: any) {
    let date_ob = new Date();

    return this.prismaService.student.update({
      where: { studentid: studentId },
      data: { ...information, lastOnline: date_ob },
    });
  }

  async create(req: any) {
    const information = req.body.information;
    const userid = parseInt(req.body.userid);
    let date_ob = new Date();
    return await this.prismaService.student.create({
      data: {
        userid: userid,
        ...information,
        lastOnline: date_ob,
      },
    });
  }

  async test() {
    const inputArray = [
      {
        id: 1,
        studentid: null,
        tutorid: 1,
        CentralMidLevels: false,
        PokFuLam: false,
        MidLevelsCentral: true,
        SaiYingPun: false,
        WanChai: false,
        CausewayBay: false,
        HappyValley: false,
        NorthPoint: false,
        QuarryBay: false,
        TaiKoo: false,
        ShauKeiWan: false,
        SiuSaiWan: false,
        ChaiWan: false,
        LittleSaiWan: false,
        Aberdeen: false,
        ApLeiChau: false,
        Stanley: false,
        MeiFoo: false,
        LaiChiKok: false,
        CheungShaWan: false,
        ShamShuiPo: false,
        TaiKokTsui: false,
        MongKok: false,
        HoManTin: false,
        YauMaTei: false,
        Jordan: false,
        TsimShaTsui: false,
        ToKwaWan: false,
        HungHom: false,
        ShekKipMei: false,
        KowloonTong: false,
        LokFu: false,
        TszWanShan: false,
        WongTaiSin: false,
        DiamondHill: false,
        SanPoKong: false,
        ChoiHungAndNgauChiWan: false,
        NgauTauKokAndKowloonBay: false,
        SauMauPing: false,
        KwunTong: false,
        LamTin: false,
        YauTong: false,
        KowloonCity: false,
        SheungShui: false,
        FanLing: false,
        TaiPo: false,
        MaOnShan: false,
        FoTan: false,
        SiuLekYuen: false,
        ShaTin: false,
        ShaTinTownCenter: false,
        TaiWai: false,
        SaiKung: false,
        TseungKwanO: false,
        TinShuiWai: false,
        YuenLong: false,
        TuenMun: false,
        TsingLungTau: false,
        ShamTseng: false,
        TsuenWan: false,
        KwaiFong: false,
        KwaiChung: false,
        LaiKing: false,
        TsingYi: false,
        MaWan: false,
        TungChung: false,
        OutlyingIslands: false,
        General: false,
        Arts: false,
        Science: false,
        Commerce: false,
        ChineseLanguage: false,
        EnglishLanguage: false,
        Mathematics: false,
        MathematicsM1: false,
        MathematicsM2: false,
        ChineseLiterature: false,
        EnglishLiterature: false,
        ChineseHistory: false,
        WorldHistory: false,
        Geography: false,
        LiberalStudies: false,
        IntegratedScience: false,
        IntegratedHumanities: false,
        AdditionalMathematics: false,
        PureMathematics: false,
        AppliedMathematics: false,
        Physics: false,
        Biology: false,
        Chemistry: false,
        BusinessStudies: false,
        Accounting: false,
        Economics: false,
        IntroductiontoBusiness: false,
        GovernmentandPublicAffairs: false,
        MathematicsandStatistics: false,
        BAFS: false,
        Mandarin: false,
        Cantonese: false,
        EnglishPinyin: false,
        Japanese: false,
        Korean: false,
        French: false,
        Italian: false,
        German: false,
        Spanish: false,
        EnglishConversation: false,
        GCE: false,
        TOEFL: false,
        IELTS: false,
        Cello: false,
        Viola: false,
        Violin: false,
        Trumpet: false,
        Harmonica: false,
        Recorder: false,
        Flute: false,
        Panflute: false,
        Clarinet: false,
        Saxophone: false,
        Erhu: false,
        Guzheng: false,
        Pipa: false,
        Yangqin: false,
        Liuqin: false,
        Guitar: false,
        AcousticGuitar: false,
        ElectricGuitar: false,
        ElectronicKeyboard: false,
        Piano: false,
        Vocal: false,
        MusicTheory: false,
        SwimmingFreestyle: false,
        SwimmingBackstroke: false,
        SwimmingButterfly: false,
        SwimmingBreaststroke: false,
        Painting: false,
        Computer: false,
        CambridgeEnglish: false,
        OlympiadMath: false,
        Abacus: false,
        MathematicsXueLin: false,
        IGCSE: false,
        IBOthers: false,
        Mon0000: false,
        Mon0100: false,
        Mon0200: false,
        Mon0300: false,
        Mon0400: false,
        Mon0500: false,
        Mon0600: false,
        Mon0700: false,
        Mon0800: false,
        Mon0900: false,
        Mon1000: false,
        Mon1100: false,
        Mon1200: false,
        Mon1300: false,
        Mon1400: false,
        Mon1500: false,
        Mon1600: false,
        Mon1700: false,
        Mon1800: false,
        Mon1900: false,
        Mon2000: false,
        Mon2100: false,
        Mon2200: false,
        Mon2300: false,
        Tue0000: false,
        Tue0100: false,
        Tue0200: false,
        Tue0300: false,
        Tue0400: false,
        Tue0500: false,
        Tue0600: false,
        Tue0700: false,
        Tue0800: false,
        Tue0900: false,
        Tue1000: false,
        Tue1100: false,
        Tue1200: false,
        Tue1300: false,
        Tue1400: false,
        Tue1500: false,
        Tue1600: false,
        Tue1700: false,
        Tue1800: false,
        Tue1900: false,
        Tue2000: false,
        Tue2100: false,
        Tue2200: false,
        Tue2300: false,
        Wed0000: false,
        Wed0100: false,
        Wed0200: false,
        Wed0300: false,
        Wed0400: false,
        Wed0500: false,
        Wed0600: false,
        Wed0700: false,
        Wed0800: false,
        Wed0900: false,
        Wed1000: false,
        Wed1100: false,
        Wed1200: false,
        Wed1300: false,
        Wed1400: false,
        Wed1500: false,
        Wed1600: false,
        Wed1700: false,
        Wed1800: false,
        Wed1900: false,
        Wed2000: false,
        Wed2100: false,
        Wed2200: false,
        Wed2300: false,
        Thu0000: false,
        Thu0100: false,
        Thu0200: false,
        Thu0300: false,
        Thu0400: false,
        Thu0500: false,
        Thu0600: false,
        Thu0700: false,
        Thu0800: false,
        Thu0900: false,
        Thu1000: false,
        Thu1100: false,
        Thu1200: false,
        Thu1300: false,
        Thu1400: false,
        Thu1500: false,
        Thu1600: false,
        Thu1700: false,
        Thu1800: false,
        Thu1900: false,
        Thu2000: false,
        Thu2100: false,
        Thu2200: false,
        Thu2300: false,
        Fri0000: false,
        Fri0100: false,
        Fri0200: false,
        Fri0300: false,
        Fri0400: false,
        Fri0500: false,
        Fri0600: false,
        Fri0700: false,
        Fri0800: false,
        Fri0900: false,
        Fri1000: false,
        Fri1100: false,
        Fri1200: false,
        Fri1300: false,
        Fri1400: false,
        Fri1500: false,
        Fri1600: false,
        Fri1700: false,
        Fri1800: false,
        Fri1900: false,
        Fri2000: false,
        Fri2100: false,
        Fri2200: false,
        Fri2300: false,
        Sat0000: false,
        Sat0100: false,
        Sat0200: false,
        Sat0300: false,
        Sat0400: false,
        Sat0500: false,
        Sat0600: false,
        Sat0700: false,
        Sat0800: false,
        Sat0900: false,
        Sat1000: false,
        Sat1100: false,
        Sat1200: false,
        Sat1300: false,
        Sat1400: false,
        Sat1500: false,
        Sat1600: false,
        Sat1700: false,
        Sat1800: false,
        Sat1900: false,
        Sat2000: false,
        Sat2100: false,
        Sat2200: false,
        Sat2300: false,
        Sun0000: false,
        Sun0100: false,
        Sun0200: false,
        Sun0300: false,
        Sun0400: false,
        Sun0500: false,
        Sun0600: false,
        Sun0700: false,
        Sun0800: false,
        Sun0900: true,
        Sun1000: false,
        Sun1100: false,
        Sun1200: false,
        Sun1300: false,
        Sun1400: false,
        Sun1500: false,
        Sun1600: false,
        Sun1700: false,
        Sun1800: false,
        Sun1900: false,
        Sun2000: false,
        Sun2100: false,
        Sun2200: false,
        Sun2300: false,
      },
      {
        id: 2,
        studentid: null,
        tutorid: 1,
        CentralMidLevels: false,
        PokFuLam: true,
        MidLevelsCentral: false,
        SaiYingPun: false,
        WanChai: false,
        CausewayBay: false,
        HappyValley: false,
        NorthPoint: false,
        QuarryBay: false,
        TaiKoo: false,
        ShauKeiWan: false,
        SiuSaiWan: false,
        ChaiWan: false,
        LittleSaiWan: false,
        Aberdeen: false,
        ApLeiChau: false,
        Stanley: false,
        MeiFoo: false,
        LaiChiKok: false,
        CheungShaWan: false,
        ShamShuiPo: false,
        TaiKokTsui: false,
        MongKok: false,
        HoManTin: false,
        YauMaTei: false,
        Jordan: false,
        TsimShaTsui: false,
        ToKwaWan: false,
        HungHom: false,
        ShekKipMei: false,
        KowloonTong: false,
        LokFu: false,
        TszWanShan: false,
        WongTaiSin: false,
        DiamondHill: false,
        SanPoKong: false,
        ChoiHungAndNgauChiWan: false,
        NgauTauKokAndKowloonBay: false,
        SauMauPing: false,
        KwunTong: false,
        LamTin: false,
        YauTong: false,
        KowloonCity: false,
        SheungShui: false,
        FanLing: false,
        TaiPo: false,
        MaOnShan: false,
        FoTan: false,
        SiuLekYuen: false,
        ShaTin: false,
        ShaTinTownCenter: false,
        TaiWai: false,
        SaiKung: false,
        TseungKwanO: false,
        TinShuiWai: false,
        YuenLong: false,
        TuenMun: false,
        TsingLungTau: false,
        ShamTseng: false,
        TsuenWan: false,
        KwaiFong: false,
        KwaiChung: false,
        LaiKing: false,
        TsingYi: false,
        MaWan: false,
        TungChung: false,
        OutlyingIslands: false,
        General: false,
        Arts: false,
        Science: false,
        Commerce: false,
        ChineseLanguage: false,
        EnglishLanguage: false,
        Mathematics: false,
        MathematicsM1: false,
        MathematicsM2: false,
        ChineseLiterature: false,
        EnglishLiterature: false,
        ChineseHistory: false,
        WorldHistory: false,
        Geography: false,
        LiberalStudies: false,
        IntegratedScience: false,
        IntegratedHumanities: false,
        AdditionalMathematics: false,
        PureMathematics: false,
        AppliedMathematics: false,
        Physics: false,
        Biology: false,
        Chemistry: false,
        BusinessStudies: false,
        Accounting: false,
        Economics: false,
        IntroductiontoBusiness: false,
        GovernmentandPublicAffairs: false,
        MathematicsandStatistics: false,
        BAFS: false,
        Mandarin: false,
        Cantonese: false,
        EnglishPinyin: false,
        Japanese: false,
        Korean: false,
        French: false,
        Italian: false,
        German: false,
        Spanish: false,
        EnglishConversation: false,
        GCE: false,
        TOEFL: false,
        IELTS: false,
        Cello: false,
        Viola: false,
        Violin: false,
        Trumpet: false,
        Harmonica: false,
        Recorder: false,
        Flute: false,
        Panflute: false,
        Clarinet: false,
        Saxophone: false,
        Erhu: false,
        Guzheng: false,
        Pipa: false,
        Yangqin: false,
        Liuqin: false,
        Guitar: false,
        AcousticGuitar: false,
        ElectricGuitar: false,
        ElectronicKeyboard: false,
        Piano: false,
        Vocal: false,
        MusicTheory: false,
        SwimmingFreestyle: false,
        SwimmingBackstroke: false,
        SwimmingButterfly: false,
        SwimmingBreaststroke: false,
        Painting: false,
        Computer: false,
        CambridgeEnglish: false,
        OlympiadMath: false,
        Abacus: false,
        MathematicsXueLin: false,
        IGCSE: false,
        IBOthers: false,
        Mon0000: false,
        Mon0100: false,
        Mon0200: false,
        Mon0300: false,
        Mon0400: false,
        Mon0500: false,
        Mon0600: false,
        Mon0700: false,
        Mon0800: false,
        Mon0900: false,
        Mon1000: true,
        Mon1100: false,
        Mon1200: false,
        Mon1300: false,
        Mon1400: false,
        Mon1500: false,
        Mon1600: false,
        Mon1700: false,
        Mon1800: false,
        Mon1900: false,
        Mon2000: false,
        Mon2100: false,
        Mon2200: false,
        Mon2300: false,
        Tue0000: false,
        Tue0100: false,
        Tue0200: false,
        Tue0300: false,
        Tue0400: false,
        Tue0500: false,
        Tue0600: false,
        Tue0700: false,
        Tue0800: false,
        Tue0900: false,
        Tue1000: false,
        Tue1100: false,
        Tue1200: false,
        Tue1300: false,
        Tue1400: false,
        Tue1500: false,
        Tue1600: false,
        Tue1700: false,
        Tue1800: false,
        Tue1900: false,
        Tue2000: false,
        Tue2100: false,
        Tue2200: false,
        Tue2300: false,
        Wed0000: false,
        Wed0100: false,
        Wed0200: false,
        Wed0300: false,
        Wed0400: false,
        Wed0500: false,
        Wed0600: false,
        Wed0700: false,
        Wed0800: false,
        Wed0900: false,
        Wed1000: false,
        Wed1100: false,
        Wed1200: false,
        Wed1300: false,
        Wed1400: false,
        Wed1500: false,
        Wed1600: false,
        Wed1700: false,
        Wed1800: false,
        Wed1900: false,
        Wed2000: false,
        Wed2100: false,
        Wed2200: false,
        Wed2300: false,
        Thu0000: false,
        Thu0100: false,
        Thu0200: false,
        Thu0300: false,
        Thu0400: false,
        Thu0500: false,
        Thu0600: false,
        Thu0700: false,
        Thu0800: false,
        Thu0900: false,
        Thu1000: false,
        Thu1100: false,
        Thu1200: false,
        Thu1300: false,
        Thu1400: false,
        Thu1500: false,
        Thu1600: false,
        Thu1700: false,
        Thu1800: false,
        Thu1900: false,
        Thu2000: false,
        Thu2100: false,
        Thu2200: false,
        Thu2300: false,
        Fri0000: false,
        Fri0100: false,
        Fri0200: false,
        Fri0300: false,
        Fri0400: false,
        Fri0500: false,
        Fri0600: false,
        Fri0700: false,
        Fri0800: false,
        Fri0900: false,
        Fri1000: false,
        Fri1100: false,
        Fri1200: false,
        Fri1300: false,
        Fri1400: false,
        Fri1500: false,
        Fri1600: false,
        Fri1700: false,
        Fri1800: false,
        Fri1900: false,
        Fri2000: false,
        Fri2100: false,
        Fri2200: false,
        Fri2300: false,
        Sat0000: false,
        Sat0100: false,
        Sat0200: false,
        Sat0300: false,
        Sat0400: false,
        Sat0500: false,
        Sat0600: false,
        Sat0700: false,
        Sat0800: false,
        Sat0900: false,
        Sat1000: false,
        Sat1100: false,
        Sat1200: false,
        Sat1300: false,
        Sat1400: false,
        Sat1500: false,
        Sat1600: false,
        Sat1700: false,
        Sat1800: false,
        Sat1900: false,
        Sat2000: false,
        Sat2100: false,
        Sat2200: false,
        Sat2300: false,
        Sun0000: false,
        Sun0100: false,
        Sun0200: false,
        Sun0300: false,
        Sun0400: false,
        Sun0500: false,
        Sun0600: false,
        Sun0700: false,
        Sun0800: false,
        Sun0900: false,
        Sun1000: false,
        Sun1100: false,
        Sun1200: false,
        Sun1300: false,
        Sun1400: false,
        Sun1500: false,
        Sun1600: false,
        Sun1700: false,
        Sun1800: false,
        Sun1900: false,
        Sun2000: false,
        Sun2100: false,
        Sun2200: false,
        Sun2300: false,
      },
    ];
    const object = await this.DataService.formatObject(inputArray);
    // console.log(object);
    return object;
  }
}
